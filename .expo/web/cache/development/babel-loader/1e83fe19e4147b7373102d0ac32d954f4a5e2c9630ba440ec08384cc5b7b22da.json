{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { registerRootComponent } from \"expo\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Register from \"../components/pages/registerPage\";\nimport Login from \"../components/pages/loginPage\";\nimport landingPage from \"../components/pages/landingPage\";\nimport HomePage from \"../components/pages/homePage\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport function Registration_Login_Page(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"Register\");\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Register\"\n      })\n    }), _jsx(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"Login\");\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Login\"\n      })\n    })]\n  });\n}\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"landingPage\",\n      children: [_jsx(Stack.Screen, {\n        options: {\n          title: \"Register / Log-in\"\n        },\n        name: \"LoginPage\",\n        component: Registration_Login_Page\n      }), _jsx(Stack.Screen, {\n        options: {\n          title: \"Register\"\n        },\n        name: \"Register\",\n        component: Register\n      }), _jsx(Stack.Screen, {\n        options: {\n          title: \"Login\"\n        },\n        name: \"Login\",\n        component: Login\n      }), _jsx(Stack.Screen, {\n        options: {\n          title: \"Nutrient Navigators\"\n        },\n        name: \"landingPage\",\n        component: landingPage\n      }), _jsx(Stack.Screen, {\n        options: {\n          title: \"Home Page\"\n        },\n        name: \"HomePage\",\n        component: HomePage\n      })]\n    })\n  });\n}\nregisterRootComponent(App);\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    padding: 10,\n    alignItems: \"center\",\n    gap: 50\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\"\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"black\"\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Pressable","registerRootComponent","NavigationContainer","createNativeStackNavigator","Register","Login","landingPage","HomePage","jsx","_jsx","jsxs","_jsxs","Stack","Registration_Login_Page","_ref","navigation","style","styles","container","children","button","onPress","navigate","text","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","Navigator","initialRouteName","Screen","options","title","name","component","create","display","flexDirection","justifyContent","padding","alignItems","gap","fontSize","lineHeight","fontWeight","letterSpacing","color","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor"],"sources":["/Users/andresfernandez/CS555/NutrientNavigators/frontend/NutrientNavigators/app/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, Button, StyleSheet, Pressable } from \"react-native\";\nimport { registerRootComponent } from \"expo\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Register from \"../components/pages/registerPage\";\nimport Login from \"../components/pages/loginPage\";\nimport landingPage from \"../components/pages/landingPage\";\nimport HomePage from \"../components/pages/homePage\";\n\nexport type RootStackParamList = {\n  LoginPage: undefined;\n  landingPage: undefined;\n  Login: { AccountInfo: { id: string; email: string } };\n  Register: { AccountInfo: { id: string; email: string } };\n  HomePage: { AccountInfo: { id: string; email: string } };\n  MealLogger: { AccountInfo: { id: string; email: string } };\n  ProgressPage: { AccountInfo: { id: string; email: string } };\n};\nconst Stack = createNativeStackNavigator<RootStackParamList>();\nexport function Registration_Login_Page({ navigation }: { navigation: any }) {\n  return (\n    <View style={styles.container}>\n      <Pressable\n        style={styles.button}\n        onPress={() => navigation.navigate(\"Register\")}\n      >\n        <Text style={styles.text}>Register</Text>\n      </Pressable>\n      <Pressable\n        style={styles.button}\n        onPress={() => navigation.navigate(\"Login\")}\n      >\n        <Text style={styles.text}>Login</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"landingPage\">\n        <Stack.Screen\n          options={{ title: \"Register / Log-in\" }}\n          name=\"LoginPage\"\n          component={Registration_Login_Page}\n        />\n        <Stack.Screen\n          options={{ title: \"Register\" }}\n          name=\"Register\"\n          component={Register}\n        />\n        <Stack.Screen\n          options={{ title: \"Login\" }}\n          name=\"Login\"\n          component={Login}\n        />\n        <Stack.Screen\n          options={{ title: \"Nutrient Navigators\" }}\n          name=\"landingPage\"\n          component={landingPage}\n        />\n        <Stack.Screen\n          options={{ title: \"Home Page\" }}\n          name=\"HomePage\"\n          component={HomePage}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nregisterRootComponent(App);\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    padding: 10,\n    alignItems: \"center\",\n    gap: 50,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\",\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"black\",\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}