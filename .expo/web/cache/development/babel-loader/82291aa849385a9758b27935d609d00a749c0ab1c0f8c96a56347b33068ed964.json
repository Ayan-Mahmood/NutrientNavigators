{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Register() {\n  var handleRegister = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(flask_api + \"/api/register\", {\n          email: email,\n          password: password\n        });\n        if (response.data.success) {\n          console.log('Registration is successful!');\n        }\n      } catch (error) {\n        alert('Registration failed. Please try again.');\n      }\n    });\n    return function handleRegister() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: StyleSheet.container,\n    children: [_jsx(TextInput, {\n      styles: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      styles: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Register\",\n      onPress: handleRegister\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 8\n  },\n  error: {\n    color: 'red'\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","Register","handleRegister","_ref","_asyncToGenerator","response","post","flask_api","email","password","data","success","console","log","error","alert","apply","arguments","style","container","children","styles","input","placeholder","value","onChangeText","setEmail","keyboardType","autoCapitalize","setPassword","secureTextEntry","title","onPress","create","padding","height","borderColor","borderWidth","marginBottom","paddingHorizontal","color"],"sources":["/workspaces/NutrientNavigators/frontend/NutrientNavigators/app/register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\nimport axios from 'axios';\n\nexport default function Register() {\n\n    const handleRegister = async () => {\n        try {\n            const response = await axios.post(`${flask_api}/api/register`, {\n                email,\n                password,\n            });\n            \n            if (response.data.success) {\n                console.log('Registration is successful!');\n            }\n        } catch (error) {\n            alert('Registration failed. Please try again.');\n        }\n    };\n\nreturn ( \n        <View style={StyleSheet.container}>\n            <TextInput\n            styles={styles.input}\n            placeholder=\"Email\"\n            value={email}\n            onChangeText={setEmail}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n            />\n            <TextInput\n            styles={styles.input}\n            placeholder=\"Password\"\n            value={password}\n            onChangeText={setPassword}\n            secureTextEntry\n            />\n            <Button title=\"Register\" onPress={handleRegister} />\n            \n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 16,\n    },\n    input: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 12,\n        paddingHorizontal: 8,\n    },\n    error: {\n        color: 'red',\n    },\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAE/B,IAAMC,cAAc;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACA,IAAMC,QAAQ,SAAST,KAAK,CAACU,IAAI,CAAIC,SAAS,oBAAiB;UAC3DC,KAAK,EAALA,KAAK;UACLC,QAAQ,EAARA;QACJ,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE;UACvBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC9C;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,KAAK,CAAC,wCAAwC,CAAC;MACnD;IACJ,CAAC;IAAA,gBAbKb,cAAcA,CAAA;MAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAanB;EAEL,OACQjB,KAAA,CAACT,IAAI;IAAC2B,KAAK,EAAEvB,UAAU,CAACwB,SAAU;IAAAC,QAAA,GAC9BtB,IAAA,CAACN,SAAS;MACV6B,MAAM,EAAEA,MAAM,CAACC,KAAM;MACrBC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEhB,KAAM;MACbiB,YAAY,EAAEC,QAAS;MACvBC,YAAY,EAAC,eAAe;MAC5BC,cAAc,EAAC;IAAM,CACpB,CAAC,EACF9B,IAAA,CAACN,SAAS;MACV6B,MAAM,EAAEA,MAAM,CAACC,KAAM;MACrBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEf,QAAS;MAChBgB,YAAY,EAAEI,WAAY;MAC1BC,eAAe;IAAA,CACd,CAAC,EACFhC,IAAA,CAACL,MAAM;MAACsC,KAAK,EAAC,UAAU;MAACC,OAAO,EAAE9B;IAAe,CAAE,CAAC;EAAA,CAElD,CAAC;AAEf;AAAC;AAED,IAAMmB,MAAM,GAAG1B,UAAU,CAACsC,MAAM,CAAC;EAC7Bd,SAAS,EAAE;IACPe,OAAO,EAAE;EACb,CAAC;EACDZ,KAAK,EAAE;IACHa,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,iBAAiB,EAAE;EACvB,CAAC;EACDzB,KAAK,EAAE;IACH0B,KAAK,EAAE;EACX;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}