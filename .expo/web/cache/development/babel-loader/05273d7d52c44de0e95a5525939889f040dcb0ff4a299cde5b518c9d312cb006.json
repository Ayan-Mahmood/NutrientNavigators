{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, e, o, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), e, o); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(o, t); } : p; }\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from \"../AnimatedEvent\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedStyle from \"./AnimatedStyle\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport findNodeHandle from \"../../../../exports/findNodeHandle\";\nimport invariant from 'fbjs/lib/invariant';\nvar AnimatedProps = function (_AnimatedNode) {\n  function AnimatedProps(props, callback) {\n    var _this;\n    _classCallCheck(this, AnimatedProps);\n    _this = _callSuper(this, AnimatedProps);\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n    _this._props = props;\n    _this._callback = callback;\n    _this.__attach();\n    return _this;\n  }\n  _inherits(AnimatedProps, _AnimatedNode);\n  return _createClass(AnimatedProps, [{\n    key: \"__getValue\",\n    value: function __getValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          if (!value.__isNative || value instanceof AnimatedStyle) {\n            props[key] = value.__getValue();\n          }\n        } else if (value instanceof AnimatedEvent) {\n          props[key] = value.__getHandler();\n        } else {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          props[key] = value.__getAnimatedValue();\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      if (this.__isNative && this._animatedView) {\n        this.__disconnectAnimatedView();\n      }\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n      _superPropGet(AnimatedProps, \"__detach\", this, 3)([]);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        this.__isNative = true;\n        for (var key in this._props) {\n          var value = this._props[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative();\n          }\n        }\n        if (this._animatedView) {\n          this.__connectAnimatedView();\n        }\n      }\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n      this._animatedView = animatedView;\n      if (this.__isNative) {\n        this.__connectAnimatedView();\n      }\n    }\n  }, {\n    key: \"__connectAnimatedView\",\n    value: function __connectAnimatedView() {\n      invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__disconnectAnimatedView\",\n    value: function __disconnectAnimatedView() {\n      invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__restoreDefaultValues\",\n    value: function __restoreDefaultValues() {\n      if (this.__isNative) {\n        NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var propsConfig = {};\n      for (var propKey in this._props) {\n        var value = this._props[propKey];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n          propsConfig[propKey] = value.__getNativeTag();\n        }\n      }\n      return {\n        type: 'props',\n        props: propsConfig\n      };\n    }\n  }]);\n}(AnimatedNode);\nexport default AnimatedProps;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_get","_inherits","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","_objectSpread","AnimatedEvent","AnimatedNode","AnimatedStyle","NativeAnimatedHelper","findNodeHandle","invariant","AnimatedProps","_AnimatedNode","props","callback","_this","style","_props","_callback","__attach","key","value","__getValue","__isNative","__getHandler","__getAnimatedValue","__addChild","__detach","_animatedView","__disconnectAnimatedView","__removeChild","update","__makeNative","__connectAnimatedView","setNativeView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","__restoreDefaultValues","restoreDefaultValues","__getNativeConfig","propsConfig","propKey","type"],"sources":["/Users/andresfernandez/CS555/NutrientNavigators/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedProps.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport findNodeHandle from '../../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n\n    this._props = props;\n    this._callback = callback;\n\n    this.__attach();\n  }\n\n  __getValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n\n    return props;\n  }\n\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n\n    this._animatedView = animatedView;\n\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig() {\n    var propsConfig = {};\n\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n\n}\n\nexport default AnimatedProps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}